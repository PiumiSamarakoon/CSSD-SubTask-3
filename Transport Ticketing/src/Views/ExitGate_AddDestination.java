/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;
import Controllers.DynamicJourney;
import static Controllers.DynamicJourney.addDestinationstop;
import static Controllers.DynamicJourney.checkjourneycomplete;
import static Controllers.DynamicJourney.deserialize;
import static Controllers.DynamicJourney.file1;
import Models.JourneyList;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class ExitGate_AddDestination extends javax.swing.JFrame {
    
    /* 
    Journeylist<Dynamic_journey> journeylist = new Journeylist<Dynamic_journey>();
     
      public static final File file1 = new File("journey.txt");
    //deserilalising 
       public static Journeylist deserialize(File filename) {

        Journeylist d_arraylist = null;
        try {
            FileInputStream fis = new FileInputStream("journey.txt");
            ObjectInputStream ois = new ObjectInputStream(fis);

            d_arraylist = (Journeylist) ois.readObject();
            fis.close();
            System.out.println("Deserialized");
            System.out.println(d_arraylist);

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }

        return d_arraylist;
    }
    */
    
    
    /**
     * Creates new form AddDestination
     */
    public ExitGate_AddDestination() {
        initComponents();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        AddDestination_ = new javax.swing.JButton();
        Destinationbox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setText("  TRAVEL ANYWHERE");

        jButton1.setText("BACK");

        jLabel2.setText("Destination :");

        AddDestination_.setText("Add Destination");
        AddDestination_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDestination_ActionPerformed(evt);
            }
        });

        Destinationbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bristol", "Leeds", "Sheffield", "Oxford", "Liverpool", " " }));
        Destinationbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DestinationboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(AddDestination_))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Destinationbox, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(7, 7, 7)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Destinationbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(AddDestination_)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddDestination_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDestination_ActionPerformed
        // TODO add your handling code here:
      
      String destination = Destinationbox.getSelectedItem().toString();
        if(Destinationbox.getSelectedItem().equals(" Bristol") || Destinationbox.getSelectedItem().equals("Leeds")||Destinationbox.getSelectedItem().equals("Sheffield")
                || Destinationbox.getSelectedItem().equals("Oxford") || Destinationbox.getSelectedItem().equals("Liverpool"))
        {
          new ExitGate_Payfor_DynamicJourney().setVisible(true);
          this.dispose();
        }

        addDestinationstop(destination);
        checkjourneycomplete(destination);
        
     /*         new ExitGate_Payfor_DynamicJourney().setVisible(true);
    //    Journeylist<Dynamic_journey> joureny = null;        //initialize journey array
   //     joureny = new Journeylist<Dynamic_journey>();       //create new journey array
    //    joureny = (Journeylist<Dynamic_journey>) deserialize(file1);  //deserialize file
            Dynamic_journey usr = new Dynamic_journey(destination_stop);
            Journeylist <Dynamic_journey> journey = new Journeylist<Dynamic_journey>();
            Journeylist <Dynamic_journey> journey2 = new Journeylist<Dynamic_journey>();
            journey2 = deserialize(file);
            
            journey.add(usr);
      
            serialize(journey);
           */
       
         }
         
          JourneyList <DynamicJourney> records = new JourneyList <DynamicJourney>();
          
        public static final File file = new File("Journey.txt");
          public void serialize(JourneyList journey){
        try{
          
           FileOutputStream fos = new FileOutputStream(file);
           ObjectOutputStream oos = new ObjectOutputStream(fos);
            
            oos.writeObject(journey);
            fos.close();
            System.out.println("Serialized");
        }
        catch(FileNotFoundException e){
            e.printStackTrace();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
          }
          
         public JourneyList deserialize(File file){
        
         JourneyList b_arraylist = null;
        try{
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
           
          
            b_arraylist = (JourneyList)(JourneyList)ois.readObject();
            fis.close();
            System.out.println("Deserialized");
            System.out.println(b_arraylist);
        }
            
        catch(FileNotFoundException e){
            e.printStackTrace();
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } 
        catch(ClassCastException ex2){
            ex2.printStackTrace();
        }
       
        return b_arraylist;
     
        
     //  for (int i = 0; i < joureny.size(); i++) {
    //        Dynamic_journey temp = (Dynamic_journey) joureny.get(i);
             //   if (destination_stop.equals(temp.getdestination())) {
                 
                //  GateAccountDetails.destinationbox.setText(String.valueOf(temp.getdestination()));
                  
                 // JOptionPane.showMessageDialog(null, "CompletenJourney.. Thank you..");
          //  }
        }
 //   }
      
      
  /*  new PaymentObject().setVisible(true);
        
        Journeylist<Dynamic_journey> joureny = null;        //initialize offerArr
        joureny = new Journeylist<Dynamic_journey>();       //create new offerArr
        joureny = (Journeylist<Dynamic_journey>) deserialize(file1);
        for (int i = 0; i < joureny.size(); i++) {
            Dynamic_journey temp = (Dynamic_journey) joureny.get(i);
                if (destination_stop.equals(temp.getdestination())) {
                  
                  GateAccountDetails.destinationbox.setText(String.valueOf(temp.getdestination()));
           }
    }//GEN-LAST:event_AddDestination_ActionPerformed
*/
    private void DestinationboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DestinationboxActionPerformed
        // TODO add your handling code here:
         String destination_stop = Destinationbox.getSelectedItem().toString();
    }//GEN-LAST:event_DestinationboxActionPerformed
   // }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExitGate_AddDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExitGate_AddDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExitGate_AddDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExitGate_AddDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExitGate_AddDestination().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDestination_;
    private javax.swing.JComboBox<String> Destinationbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
